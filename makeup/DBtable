--product table 생성
CREATE TABLE PRODUCT(
	product_no		NUMBER NOT NULL,
	product_thumbNail	VARCHAR2(200),
	product_name		VARCHAR2(200) NOT NULL,
	product_explanation	VARCHAR2(2000),
	product_price		NUMBER NOT NULL,
	product_category	VARCHAR2(200),
	product_context		VARCHAR2(4000),
	registdate		DATE DEFAULT SYSDATE,
	
	CONSTRAINT PRODUCT_PK PRIMARY KEY (product_no)
);

--image table 생성
CREATE TABLE IMAGE(
	product_no	NUMBER NOT NULL,
	image_no	NUMBER NOT NULL,
	imagepath	VARCHAR2(3000)
);

--store table 생성
CREATE TABLE STORE(
	id      	NUMBER NOT NULL,
	readcnt 	NUMBER,
	no      	NUMBER,
	title  	 	VARCHAR2(200),
	category 	VARCHAR2(100),
	content 	VARCHAR2(4000),
	writer  	VARCHAR2(50),
	filename 	VARCHAR2(500),
	filepath 	VARCHAR2(2000),
	writedate 	DATE DEFAULT SYSDATE
);

--customer table 생성
CREATE TABLE CUSTOMER(
	customer_id		VARCHAR2(500) NOT NULL,
	customer_pw		VARCHAR2(1000) NOT NULL,
	customer_name		VARCHAR2(200) NOT  NULL,
	customer_socialNum	VARCHAR2(200),
	customer_email 		VARCHAR2(200),
	customer_phone 		VARCHAR2(200),
	customer_postcode	VARCHAR2(100),
	customer_address	VARCHAR2(1000),
	customer_detailAddress 	VARCHAR2(500),
	customer_registerDate	DATE DEFAULT SYSDATE,
	
	CONSTRAINT CUSTOMER_PK PRIMARY KEY (customer_id)
);

-- cart table 생성
CREATE TABLE CART(
	cart_id		NUMBER NOT NULL PRIMARY KEY,
	customer_id	VARCHAR2(500),
	product_no	NUMBER NOT NULL,
	amount		NUMBER DEFAULT 0,

	CONSTRAINT CART_CUSTOMERID_FK FOREIGN KEY(customer_id) REFERENCES CUSTOMER(customer_id),
	CONSTRAINT CART_PRODUCT_FK FOREIGN KEY(product_no) REFERENCES PRODUCT(product_no)
);

-- com_code table 생성
CREATE TABLE COM_CODE(
    code_type   VARCHAR2(30) NOT NULL,
    code_id     VARCHAR2(30) NOT NULL,
    code_name   VARCHAR2(50),
    
    CONSTRAINT COM_CODE_PK PRIMARY KEY(code_id)
);




-- image sequence 생성
CREATE SEQUENCE IMAGE_SEQ
START WITH 1
INCREMENT BY 1
MAXVALUE 99999999999999999999;

-- store sequence 생성
CREATE SEQUENCE STORE_SEQ
START WITH 1
INCREMENT BY 1
MAXVALUE 99999999999999999999;

-- cart sequence 생성
CREATE SEQUENCE CART_SEQ
START WITH 1
INCREMENT BY 1
MAXVALUE 99999999999999999999;





-- test 데이터 삽입
INSERT INTO IMAGE
VALUES((SELECT MAX(PRODUCT_NO) FROM PRODUCT), 1, 'ㄷㄷ');
INSERT INTO IMAGE
	(
	 PRODUCT_NO
	, IMAGE_NO
	, IMAGEPATH
	)
VALUES
	(
	  (SELECT MAX(PRODUCT_NO) FROM PRODUCT)
	, (SELECT MAX(NVL(IMAGE_NO, 0))+1 IMAGE_NO FROM IMAGE)
	, '테스트'
	);

INSERT INTO STORE(id, no, title, content, writer)
VALUES (1, 1, '제목', '이곳은 입니다', '작성자');
INSERT INTO STORE(id, title, writer, content, filename, filepath)
VALUES ( store_seq.nextval, '제목', '작성자', '컨텐트', '파일이름', '가나다');

INSERT INTO CUSTOMER(customer_id, customer_pw, customer_name)
VALUES('admin', 'admin', '관리자');
INSERT INTO CUSTOMER(customer_id, customer_pw, customer_name)
VALUES('test', 'test', '테스트');
INSERT INTO CUSTOMER
VALUES('ddono', 'ddono12', '또노', '9105231234567', 'ddono@gmail.com', '010-1234-1234', '08051', '서울 노원구 어딘가', '1101호', sysdate);
INSERT INTO CUSTOMER

INSERT INTO PRODUCT(PRODUCT_NO, PRODUCT_NAME, PRODUCT_PRICE)
VALUES(1, '립스틱', 24000);
INSERT INTO PRODUCT(PRODUCT_NO, PRODUCT_NAME, PRODUCT_PRICE)
VALUES((SELECT MAX(PRODUCT_NO)+1 FROM PRODUCT), '블러셔', 32000);

INSERT INTO COM_CODE
VALUES ('category', 'a1', 'face');
INSERT INTO COM_CODE
VALUES ('category', 'a2', 'lips');
INSERT INTO COM_CODE
VALUES ('category', 'a3', 'eye');
INSERT INTO COM_CODE
VALUES ('category', 'a4', 'multi');
INSERT INTO COM_CODE
VALUES ('category', 'a5', 'cleansing');
INSERT INTO COM_CODE
VALUES ('category', 'a6', 'gifting');
INSERT INTO COM_CODE
VALUES ('category', 'a7', 'acc');

COMMIT;
